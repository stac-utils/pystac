name: CI

on:
  push:
    branches:
      - main
      - "0.3"
      - "0.4"
      - "0.5"
      - "1.0"
      - "2.0"
  pull_request:

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # Allow other matrix jobs to complete if 1 fails
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        experimental:
          - false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install -e ".[validation]"

      - name: Execute test suite
        run: ./scripts/test
        shell: bash
        env:
          TMPDIR: "${{ matrix.os == 'windows-latest' && 'D:\\a\\_temp' || '' }}"

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install -e ".[validation]"

      - name: Execute test suite
        run: ./scripts/test
        env:
          CHECK_COVERAGE: true

      - name: Prepare ./coverage.xml
        # Ignore the configured fail-under to ensure we upload the coverage report. We
        # will trigger a failure for coverage drops in a later job
        run: coverage xml --fail-under 0

      - name: Upload All coverage to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ env.GITHUB_REPOSITORY }} == 'stac-utils/pystac'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Check for coverage drop
        # This will use the configured fail-under, causing this job to fail if the
        # coverage drops.
        run: coverage report

  lint:
    runs-on: ubuntu-latest
    strategy:
      # Allow other matrix jobs to complete if 1 fails
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Execute linters & type checkers
        run: pre-commit run --all-files

  vanilla:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install without orjson
        run: pip install '.[validation]'

      - name: Run unittests
        run: python -m unittest discover tests

  check-dev-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: requirements-dev.txt

      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt
